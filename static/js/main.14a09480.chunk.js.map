{"version":3,"sources":["Dropdown/Dropdown.module.css","Dropdown/Emoji.module.css","Dropdown/Emoji.js","Dropdown/Chevron.js","Dropdown/Dropdown.js","App.js","index.js"],"names":["module","exports","Emoji","children","role","className","styles","emoji","Chevron","direction","classes","cx","chevron","xmlns","width","height","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","Dropdown","id","value","options","onChange","label","useState","isVisible","setVisibility","MenuPosition","useRef","triggerRef","useContextMenu","show","hideAll","getMenuPosition","current","getBoundingClientRect","left","bottom","x","y","handleChange","data","dropdown","htmlFor","onClick","e","position","onKeyDown","key","tabIndex","ref","aria-haspopup","aria-expanded","animation","onHidden","map","option","App","selectedOption","setOption","_id","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.14a09480.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__1hbZ9\",\"dropdownDark\":\"Dropdown_dropdownDark__3XFck\",\"dropdownLight\":\"Dropdown_dropdownLight__26m1R\",\"glowingInTheDark\":\"Dropdown_glowingInTheDark__L26kz\",\"label\":\"Dropdown_label__1XVPJ\",\"dropdownItem\":\"Dropdown_dropdownItem__LrWiU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emoji\":\"Emoji_emoji__1bJ5k\"};","import React from \"react\";\nimport styles from \"./Emoji.module.css\";\n\nexport const Emoji = ({ children }) => (\n  <span role=\"img\" className={styles.emoji}>\n    {children}\n  </span>\n);\n","import React from \"react\";\nimport cx from \"clsx\";\n\nimport styles from \"./Chevron.module.css\";\n\nexport function Chevron({ direction = \"down\" }) {\n  const classes = cx(styles.chevron, {\n    [`${styles[\"chevron--down\"]}`]: direction === \"down\",\n    [`${styles[\"chevron--up\"]}`]: direction === \"up\"\n  });\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"#607D8B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n      viewBox=\"0 0 24 24\"\n      className={classes}\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\"></path>\n      <path d=\"M6 9L12 15 18 9\"></path>\n    </svg>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Item, Menu, useContextMenu } from \"react-contexify\";\n\nimport { Emoji } from \"./Emoji\";\nimport { Chevron } from \"./Chevron\";\n\nimport styles from \"./Dropdown.module.css\";\nimport cx from \"clsx\";\n\nexport function Dropdown({ id, value, options, onChange, label }) {\n  const [isVisible, setVisibility] = useState(false);\n  const MenuPosition = useRef();\n  const triggerRef = useRef();\n  const { show, hideAll } = useContextMenu({ id });\n\n  function getMenuPosition() {\n    const { left, bottom } = triggerRef.current.getBoundingClientRect();\n    MenuPosition.current = { x: left, y: bottom + 8 };\n\n    return MenuPosition.current;\n  }\n\n  function handleMenuTrigger(e) {\n    if (isVisible) {\n      setVisibility(false);\n      hideAll();\n      return;\n    }\n\n    setVisibility(true);\n    show(e, {\n      position: getMenuPosition()\n    });\n  }\n\n  function handleKeyboard(e) {\n    switch (e.key) {\n      case \"Enter\":\n        setVisibility(true);\n        show(e, {\n          position: getMenuPosition()\n        });\n        break;\n      case \"Escape\":\n        if (isVisible) {\n          setVisibility(false);\n          hideAll();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  function clearVisibility() {\n    setVisibility(false);\n  }\n\n  function handleChange({ data }) {\n    onChange(id, data.value);\n  }\n\n  const classes = cx(styles.dropdown);\n\n  return (\n    <div>\n      <label htmlFor={`label-${id}`} className={styles.label}>\n        {label}\n      </label>\n      <button\n        id={`label-${id}`}\n        onClick={handleMenuTrigger}\n        onKeyDown={handleKeyboard}\n        className={classes}\n        tabIndex={0}\n        ref={triggerRef}\n        aria-haspopup=\"true\"\n        aria-expanded={isVisible}\n      >\n        <span>{value}</span>\n        <span>\n          <Chevron direction={isVisible ? \"up\" : \"down\"} />\n        </span>\n      </button>\n      <Menu id={id} animation=\"fade\" onHidden={clearVisibility}>\n        {options.map((option) => (\n          <Item key={option} onClick={handleChange} data={{ value: option }}>\n            <div>\n              <Emoji>{value === option ? \"âœ…\" : \"\"}</Emoji>\n              <span>{option}</span>\n            </div>\n          </Item>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport \"react-contexify/dist/ReactContexify.css\";\nimport { Dropdown } from \"./Dropdown\";\n\nconst options = [\"option 1\", \"option 2\", \"option 3\", \"option 4\"];\n\nexport default function App() {\n  const [selectedOption, setOption] = useState(options[0]);\n\n  function handleDropdown(_id, value) {\n    setOption(value);\n  }\n\n  return (\n    <div className=\"container\">\n      <Dropdown\n        id=\"dropdown-id\"\n        label=\"My dropdown\"\n        options={options}\n        value={selectedOption}\n        onChange={handleDropdown}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}